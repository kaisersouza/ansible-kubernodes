- hosts: kubernodes
  become: yes
  remote_user: ansible
  become_user: root
  become_method: sudo
  connection: ssh
  gather_facts: yes

  tasks:
    - fail: msg="OS should be Debian 11, not {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: ansible_distribution != 'Debian' or ansible_distribution_version != '11'

    - name : Update Debian (aptitude)
      raw: apt update -y
      args:
        executable: /bin/bash

    - name : Update Debian 10
      apt:
        force: yes
        force_apt_get: yes
        update_cache: yes

    - name : Reboot and wait come up
      reboot:

    - sysctl:
        name: net.ipv4.ip_forward
        value: 1
        sysctl_set: yes
        state: present
        reload: yes

    - name: Turn off swap
      command: swapoff -a

    - name: Remove Swap entry from /etc/fstab.
      lineinfile:
       dest: /etc/fstab
       regexp: swap
       state: absent

    - name : Install Repo over https
      apt:
        name :
        - "ca-certificates"
        - "curl"
        - "gnupg"
        - "lsb-release"
        - "apt-transport-https"
        - "vim"
        - "software-properties-common"
        state: present

    - name: Enable bridge traffic
      shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        br_netfilter
        EOF

        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        EOF
        sudo sysctl --system

    - name: Add Docker's official GPG key
      apt_key:
        url    : https://download.docker.com/linux/debian/gpg
        state  : present
        keyring: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Add Docker's apt repository
      apt_repository:
        repo        : "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian buster stable"
        filename    : "docker"
        state: present
        update_cache: true

    - name: Install Docker
      apt:
        name:
        - "docker-ce=5:19.03.*"
        - "docker-ce-cli=5:19.03.*"
        - "containerd.io"
        state: present
        update_cache: true

    - name: Create cgroup daemon
      shell: |
        mkdir /etc/docker
        cat <<EOF | sudo tee /etc/docker/daemon.json
        {
         "exec-opts": ["native.cgroupdriver=systemd"],
         "log-driver": "json-file",
         "log-opts": {
          "max-size": "100m"
         },
          "storage-driver": "overlay2"
        }
        EOF

    - name: Enable Docker service
      service:
        name: docker
        enabled: yes

    - name: Just force systemd to reread configs (2.4 and above)
      systemd:
        daemon_reload: yes

    - name: Enable Docker service
      service:
        name: docker
        state: restarted

    - name: Add Kubernetes GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
        keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg

    - name: Add Kubernetes apt repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
        filename: "kubernetes"
        update_cache: true

    - name: Install Kubernetes components
      apt:
        name:
        - "kubeadm=1.23.1-00"
        - "kubelet=1.23.1-00"
        - "kubectl=1.23.1-00"
        state: present
        update_cache: true

    - name: Add ansible user to the docker group
      user:
        name: "{{ ansible_user }}"
        group: docker
        append: yes
